# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = wd_fw_update
description = Updates the firmware of Western Digital SSDs on Ubuntu / Linux Mint.
author = Jules Kreuer
author_email = contact@juleskreuer.eu
license = GPL-3.0-or-later
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/not-a-feature/wd_fw_update
# Add here related links, for example:
project_urls =
    Documentation = https://github.com/not-a-feature/wd_fw_update
    Source = https://github.com/not-a-feature/wd_fw_update
    Changelog = https://github.com/not-a-feature/wd_fw_update/releases
    Tracker = https://github.com/not-a-feature/wd_fw_update/issues
    Download = https://pypi.org/project/wd_fw_update/


# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = Mac, Linux

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
# python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    inquirer>=3,<4
    requests>=2.2,<3


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install wd_fw_update[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools

[options.entry_points]
console_scripts =
     wd_fw_update = wd_fw_update.main:run

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 130
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.5
package = wd_fw_update
extensions =
    github_actions
    markdown
    no_tox
    pre_commit
